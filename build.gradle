apply plugin: 'java'
apply plugin: 'pmd'
apply plugin: "jacoco"



ext {
  // extra user defined properties on Project object?
  version = 0.1
}

jacoco {
    // reportsDir = file("$buildDir/customJacocoReportDir")
}

repositories {
    mavenCentral()
}

dependencies {
  testCompile 'junit:junit:4.12'
}



task execute(type: JavaExec){
  println "executing version: ${this.ext.version}"
  println "number of tasks in this build: " + countTasks()
  main = "slime.ac.uk.Sort"
  classpath = sourceSets.main.runtimeClasspath
}

// counts number of gradle tasks
def countTasks(){
  def count = 0;
  this.getTasks().each {
    t -> count++;
  }
  return count
}

jar {
  manifest {
    attributes(
      // what does this class-path property do?
      'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
      'Main-Class': 'slime.ac.uk.Sort'
    )
  }
}


// def tstamp = new Date().format('yyyy-MM-dd_HH-mm-ss')
// def buildLogDir = "${rootDir}/build/logs"
// mkdir("${buildLogDir}")
// def buildLog = new File("${buildLogDir}/${tstamp}_buildLog.log")
//
// import org.gradle.logging.internal.*
// System.setProperty('org.gradle.color.error', 'RED')
//
// gradle.services.get(LoggingOutputInternal).addStandardOutputListener (new StandardOutputListener () {
//     void onOutput(CharSequence output) {
//         buildLog << output
//     }
// })
//
// gradle.services.get(LoggingOutputInternal).addStandardErrorListener (new StandardOutputListener () {
//     void onOutput(CharSequence output) {
//         buildLog << output
//     }
// })
